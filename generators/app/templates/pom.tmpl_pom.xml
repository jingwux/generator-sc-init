<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
<%
    if ( docker !== 'Dockerfile' ) {
        print('<docker.repository>\$\{project.parent.name\}</docker.repository>')
        print('<docker.tag>\$\{project.version\}</docker.tag>')
    }
%>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>${artifactId}-api</artifactId>
            <%='<version>${project.version}</version>'%>
        </dependency>
        <dependency>
           <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <%
            let exclusions = '';

            if (log === 'log4j2') {
                exclusions += `<exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>`
            }
            if (exclusions) {
                exclusions = `<exclusions>
                ${exclusions}
                </exclusions>`
                print(exclusions);
            }
            %>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>4.5.16</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>28.0-jre</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.taccisum</groupId>
            <artifactId>swagger-spring-boot2-starter</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.deepexi</groupId>
            <artifactId>pojo-converter-spring-boot-starter</artifactId>
            <version>1.0.0-release</version>
        </dependency>
        ${optionalDependencies}
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.codearte.jfairy</groupId>
            <artifactId>jfairy</artifactId>
            <version>0.5.9</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.0.6.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Finchley.SR2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>repository-central</id>
            <name>public Repository</name>
            <url>${mavenUrl}</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>plugin-repository-central</id>
            <url>${mavenUrl}</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <finalName>app</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <%
            let jib = '';

            if ( docker === 'Jib' ) {

               jib = `
                <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.3.0</version>
                <configuration>
                    <from>
                        <image>${jdk}</image>
                    </from>
                    <to>
                        <image>\$\{docker.repository\}:\$\{docker.tag\}</image>
                    </to>
                    <container>
                        <appRoot>/home</appRoot>
                        <workingDirectory>/home</workingDirectory>
                        <entrypoint>
                            <arg>/entrypoint.sh</arg>
                        </entrypoint>
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                    </container>
                    <extraDirectories>
                        <paths>
                            <path>scripts</path>
                        </paths>
                        <permissions>
                            <permission>
                                <file>/entrypoint.sh</file>
                                <mode>755</mode>
                            </permission>
                        </permissions>
                    </extraDirectories>
                    <allowInsecureRegistries>false</allowInsecureRegistries>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
               `;
            } else if ( docker === 'dockerfile-maven-plugin' ) {
                jib = `
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>1.4.13</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>\$\{docker.repository\}</repository>
                            <tag>\$\{docker.tag\}</tag>
                            <dockerfile>scripts/Dockerfile</dockerfile>
                            <buildArgs>
                                <JAR_FILE>target/\$\{project.build.finalName\}.jar</JAR_FILE>
                            </buildArgs>
                        </configuration>
                    </plugin>
                    `;
            }
            print(jib);

            %>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>cov</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>0.8.4</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare jacoco.exec</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>cov report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>check cov rules</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule>
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit>
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>0.30</minimum>
                                                </limit>
                                                <!--
                                                <limit>
                                                    <counter>CLASS</counter>
                                                    <value>MISSEDCOUNT</value>
                                                    <maximum>0</maximum>
                                                </limit>
                                                -->
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <%='<dataFile>${project.build.directory}/jacoco.exec</dataFile>'%>
                            <%='<outputDirectory>${project.build.directory}/jacoco-ut</outputDirectory>'%>
                            <excludes>
                                <!-- add excluded classes here -->
                                <exclude>${basePath}/config/**</exclude>
                                <exclude>${basePath}/constant/**</exclude>
                                <exclude>${basePath}/converter/**</exclude>
                                <exclude>${basePath}/domain/**</exclude>
                                <exclude>${basePath}/enums/**</exclude>
                                <exclude>${basePath}/exception/**</exclude>
                                <exclude>${basePath}/util/ValidationUtils.class</exclude>
                                <exclude>${basePath}/StartupApplication.class</exclude>
                                <exclude>**/*Demo*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>sonar</id>
            <properties>
                <sonar.host.url>http://127.0.0.1:9000</sonar.host.url>
                <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
                <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
                <%='<sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/jacoco-ut/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>'%>
                <sonar.language>java</sonar.language>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>3.7.0.1746</version>
                    </plugin>
                </plugins>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>
</project>
